# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: sfdx-orgdev-build-deploy
          # You may pin to the exact commit or the version.
          # uses: tiagonnascimento/sfdx-orgdev-build-deploy@0b2565cce31851bcf5eb4a613b41ea07e87fb439
        uses: tiagonnascimento/sfdx-orgdev-build-deploy@v2.1
        with:
            # Type of deployment, could be one of the two: production or sandbox (default)
            type: sandbox
            # Path for the encrypted certificate to be used on force:auth:jwt:grant
            certificate_path: val
            # Decryption key to be used to decrypt the certificate
            decryption_key: val2
            # Decryption IV to be used to decrypt the certificate
            decryption_iv: test
            # Client ID / Consumer Key of a connected app to the target destination
            client_id: test
            # Username to be used to connect in the target org
            username: test
            # Boolean (true/false) that will indicate whether the deploy is a checkonly deploy or not. If is a checkonly, on force:mdapi:deploy command the option -c will be appended
            checkonly: true
            # Path on the current repository to one or more package.xml that represents the packages to be deployed. Based on this files the metadata package will be created and deployed in the order specified
            manifest_path: ../../../manifest/package.xml
            # Specifies which tests are run as part of a deployment. Valid values are: NoTestRun, RunSpecifiedTests, RunLocalTests, RunAllTestsInOrg
            deploy_testlevel: RunLocalTests
            # Wait time for deployment to finish in minutes. Default is 60
            deploy_wait_time: 60
